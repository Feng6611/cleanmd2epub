[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cleanmd"
version = "0.1.0"
description = "使用 Google Gemini 清洗 OCR 生成的 Markdown 文件"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
keywords = ["markdown", "ocr", "gemini", "ai", "text-processing"]
authors = [
    {name = "Chen", email = "chen@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "google-generativeai>=0.3.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "tqdm>=4.66.0",
    "pyyaml>=6.0.1",
    "pypandoc>=1.12",
    "click>=8.1.7",
    "rich>=13.7.0",
    "pathspec>=0.12.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "build>=1.0.3",
    "twine>=4.0.2",
    "pre-commit>=3.6.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/chen/cleanmd"
Repository = "https://github.com/chen/cleanmd.git"
"Bug Tracker" = "https://github.com/chen/cleanmd/issues"
Documentation = "https://github.com/chen/cleanmd/wiki"

[project.scripts]
cleanmd = "cleanmd.cli:main"

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=cleanmd"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.setuptools]
packages = ["cleanmd"]

[tool.setuptools.package-data]
cleanmd = ["py.typed"]

[tool.coverage.run]
source = ["cleanmd"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]